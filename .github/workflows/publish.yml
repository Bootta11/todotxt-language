name: Build and Publish Extension

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  checks:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    outputs:
      should_publish: ${{ steps.publish-decision.outputs.should_publish }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for publish tokens
        run: |
          if [ -z "${{ secrets.OVSX_TOKEN }}" ] || [ -z "${{ secrets.VSCE_TOKEN }}" ]; then
            echo "⚠️  Warning: Publishing tokens not configured"
            echo "   To enable automatic publishing, add these secrets to your repository:"
            echo "   - OVSX_TOKEN: Your OpenVSX registry token"
            echo "   - VSCE_TOKEN: Your VS Code Marketplace token"
            echo "   Go to: Settings → Secrets and variables → Actions"
            echo "   Skipping publish step..."
            echo "TOKENS_AVAILABLE=false" >> $GITHUB_ENV
          else
            echo "✅ Publishing tokens found"
            echo "TOKENS_AVAILABLE=true" >> $GITHUB_ENV
          fi

      - name: Check for version change
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Check if this is the first commit or if package.json changed
          if git rev-parse HEAD~1 >/dev/null 2>&1; then
            # Not the first commit, check if version changed
            PREVIOUS_VERSION=$(git show HEAD~1:package.json | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf8')).version" 2>/dev/null || echo "")
            
            if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ] && [ -n "$PREVIOUS_VERSION" ]; then
              echo "✅ Version changed: $PREVIOUS_VERSION → $CURRENT_VERSION"
              echo "VERSION_CHANGED=true" >> $GITHUB_ENV
            else
              echo "❌ Version unchanged: $CURRENT_VERSION"
              echo "VERSION_CHANGED=false" >> $GITHUB_ENV
            fi
          else
            # First commit, always publish
            echo "✅ First commit detected, will publish version: $CURRENT_VERSION"
            echo "VERSION_CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Set publish decision
        id: publish-decision
        run: |
          if [ "$TOKENS_AVAILABLE" = "true" ] && [ "$VERSION_CHANGED" = "true" ]; then
            echo "✅ All checks passed - will publish"
            echo "should_publish=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Checks failed - skipping publish"
            echo "should_publish=false" >> $GITHUB_OUTPUT
          fi

  build-and-publish:
    needs: checks
    runs-on: ubuntu-latest
    if: needs.checks.outputs.should_publish == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Test build
        run: npm run compile

      - name: Publish to both marketplaces
        env:
          OVSX_TOKEN: ${{ secrets.OVSX_TOKEN }}
          VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
        run: npm run publish
